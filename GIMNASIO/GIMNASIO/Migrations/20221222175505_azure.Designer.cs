// <auto-generated />
using System;
using GIMNASIO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GIMNASIO.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221222175505_azure")]
    partial class azure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GIMNASIO.Models.AvanceCliente", b =>
                {
                    b.Property<int>("AvanceClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvanceCliente_Altura")
                        .HasColumnType("float");

                    b.Property<DateTime>("AvanceCliente_Fecha")
                        .HasColumnType("datetime2");

                    b.Property<float>("AvanceCliente_IMC")
                        .HasColumnType("real");

                    b.Property<double>("AvanceCliente_Peso")
                        .HasColumnType("float");

                    b.Property<string>("AvanceCliente_Situacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AvanceClienteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("tblAvanceCliente");
                });

            modelBuilder.Entity("GIMNASIO.Models.CarroItem", b =>
                {
                    b.Property<int>("CarroItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarroCantidad")
                        .HasColumnType("int");

                    b.Property<string>("CarroCompraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("CarroItemId");

                    b.HasIndex("ProductoId");

                    b.ToTable("tblCarroItem");
                });

            modelBuilder.Entity("GIMNASIO.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("tblCategorias");
                });

            modelBuilder.Entity("GIMNASIO.Models.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Rut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GIMNASIO.Models.Entrenamiento", b =>
                {
                    b.Property<int>("EntrenamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntrenamientoCategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("EntrenamientoCupoDisponible")
                        .HasColumnType("int");

                    b.Property<int>("EntrenamientoCupoTotal")
                        .HasColumnType("int");

                    b.Property<string>("EntrenamientoDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntrenamientoEstadoId")
                        .HasColumnType("int");

                    b.Property<int>("EntrenamientoZonaId")
                        .HasColumnType("int");

                    b.HasKey("EntrenamientoId");

                    b.HasIndex("EntrenamientoCategoriaId");

                    b.HasIndex("EntrenamientoEstadoId");

                    b.HasIndex("EntrenamientoZonaId");

                    b.ToTable("tblEntrenamiento");
                });

            modelBuilder.Entity("GIMNASIO.Models.EntrenamientoCategoria", b =>
                {
                    b.Property<int>("EntrenamientoCategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntrenamientoCategoria_Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntrenamientoCategoriaId");

                    b.ToTable("tblEntrenamientoCategoria");
                });

            modelBuilder.Entity("GIMNASIO.Models.EntrenamientoEstado", b =>
                {
                    b.Property<int>("EntrenamientoEstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Entrenamiento_NombreEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntrenamientoEstadoId");

                    b.ToTable("tblEntrenamientoEstado");
                });

            modelBuilder.Entity("GIMNASIO.Models.EntrenamientoUsuario", b =>
                {
                    b.Property<int>("EntrenamientoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EntrenamientoId")
                        .HasColumnType("int");

                    b.HasKey("EntrenamientoUsuarioId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EntrenamientoId");

                    b.ToTable("tblEntrenamientoUsuario");
                });

            modelBuilder.Entity("GIMNASIO.Models.EntrenamientoZona", b =>
                {
                    b.Property<int>("EntrenamientoZonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EntrenamientoZona_Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<string>("EntrenamientoZona_Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntrenamientoZonaId");

                    b.ToTable("tblEntrenamientoZona");
                });

            modelBuilder.Entity("GIMNASIO.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("tblEstados");
                });

            modelBuilder.Entity("GIMNASIO.Models.EstadoMantencion", b =>
                {
                    b.Property<int>("EstadoMantencionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoMantencionNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoMantencionId");

                    b.ToTable("tblEstadoMantencion");
                });

            modelBuilder.Entity("GIMNASIO.Models.EstadoMaquinaria", b =>
                {
                    b.Property<int>("EstadoMaquinariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoMaquinariaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoMaquinariaId");

                    b.ToTable("tblEstadoMaquinaria");
                });

            modelBuilder.Entity("GIMNASIO.Models.EstadoMembresia", b =>
                {
                    b.Property<int>("EstadoMembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoMembresiaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoMembresiaId");

                    b.ToTable("tblEstadoMembresia");
                });

            modelBuilder.Entity("GIMNASIO.Models.Mantencion", b =>
                {
                    b.Property<int>("MantencionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EstadoMantencionId")
                        .HasColumnType("int");

                    b.Property<string>("MantencionDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MantencionFechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MantencionFechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("MantencionProcedimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaquinariaId")
                        .HasColumnType("int");

                    b.HasKey("MantencionId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoMantencionId");

                    b.HasIndex("MaquinariaId");

                    b.ToTable("tblMantencion");
                });

            modelBuilder.Entity("GIMNASIO.Models.Maquinaria", b =>
                {
                    b.Property<int>("MaquinariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoMaquinariaId")
                        .HasColumnType("int");

                    b.Property<string>("MaquinariaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaquinariaNumeroSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMaquinariaId")
                        .HasColumnType("int");

                    b.HasKey("MaquinariaId");

                    b.HasIndex("EstadoMaquinariaId");

                    b.HasIndex("TipoMaquinariaId");

                    b.ToTable("tblMaquinaria");
                });

            modelBuilder.Entity("GIMNASIO.Models.Membresia", b =>
                {
                    b.Property<int>("MembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("EstadoMembresiaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaComienzo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTermino")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MetodoPagoMembresiaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMembresiaId")
                        .HasColumnType("int");

                    b.HasKey("MembresiaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoMembresiaId");

                    b.HasIndex("MetodoPagoMembresiaId");

                    b.HasIndex("TipoMembresiaId");

                    b.ToTable("tblMembresia");
                });

            modelBuilder.Entity("GIMNASIO.Models.MetodoPago", b =>
                {
                    b.Property<int>("MetodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MetodoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetodoPagoId");

                    b.ToTable("tblMetodoPago");
                });

            modelBuilder.Entity("GIMNASIO.Models.MetodoPagoMembresia", b =>
                {
                    b.Property<int>("MetodoPagoMembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MetodoPagoMembresiaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetodoPagoMembresiaId");

                    b.ToTable("tblMetodoPagoMembresia");
                });

            modelBuilder.Entity("GIMNASIO.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoEstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PedidoFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("PedidoTotal")
                        .HasColumnType("int");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("PedidoEstadoId");

                    b.ToTable("tblPedido");
                });

            modelBuilder.Entity("GIMNASIO.Models.PedidoDetalle", b =>
                {
                    b.Property<int>("PedidoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("PedidoDetalleId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("tblPedidoDetalle");
                });

            modelBuilder.Entity("GIMNASIO.Models.PedidoEstado", b =>
                {
                    b.Property<int>("PedidoEstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PedidoEstadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PedidoEstadoId");

                    b.ToTable("tblPedidoEstado");
                });

            modelBuilder.Entity("GIMNASIO.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("ProductoDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductoPrecio")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EstadoId");

                    b.ToTable("tblProductos");
                });

            modelBuilder.Entity("GIMNASIO.Models.TipoMaquinaria", b =>
                {
                    b.Property<int>("TipoMaquinariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoMaquinariaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoMaquinariaId");

                    b.ToTable("tblTipoMaquinaria");
                });

            modelBuilder.Entity("GIMNASIO.Models.TipoMembresia", b =>
                {
                    b.Property<int>("TipoMembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoMembresiaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoMembresiaId");

                    b.ToTable("tblTipoMembresia");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GIMNASIO.Models.AvanceCliente", b =>
                {
                    b.HasOne("GIMNASIO.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("GIMNASIO.Models.CarroItem", b =>
                {
                    b.HasOne("GIMNASIO.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GIMNASIO.Models.Entrenamiento", b =>
                {
                    b.HasOne("GIMNASIO.Models.EntrenamientoCategoria", "entrenamientocategoria")
                        .WithMany()
                        .HasForeignKey("EntrenamientoCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GIMNASIO.Models.EntrenamientoEstado", "entrenamientoestado")
                        .WithMany()
                        .HasForeignKey("EntrenamientoEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GIMNASIO.Models.EntrenamientoZona", "entrenamientozona")
                        .WithMany()
                        .HasForeignKey("EntrenamientoZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GIMNASIO.Models.EntrenamientoUsuario", b =>
                {
                    b.HasOne("GIMNASIO.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GIMNASIO.Models.Entrenamiento", "entrenamiento")
                        .WithMany()
                        .HasForeignKey("EntrenamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GIMNASIO.Models.Mantencion", b =>
                {
                    b.HasOne("GIMNASIO.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GIMNASIO.Models.EstadoMantencion", "EstadoMantencion")
                        .WithMany()
                        .HasForeignKey("EstadoMantencionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GIMNASIO.Models.Maquinaria", "Maquinaria")
                        .WithMany()
                        .HasForeignKey("MaquinariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GIMNASIO.Models.Maquinaria", b =>
                {
                    b.HasOne("GIMNASIO.Models.EstadoMaquinaria", "EstadoMaquinaria")
                        .WithMany()
                        .HasForeignKey("EstadoMaquinariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GIMNASIO.Models.TipoMaquinaria", "TipoMaquinaria")
                        .WithMany()
                        .HasForeignKey("TipoMaquinariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GIMNASIO.Models.Membresia", b =>
                {
                    b.HasOne("GIMNASIO.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GIMNASIO.Models.EstadoMembresia", "EstadoMembresia")
                        .WithMany()
                        .HasForeignKey("EstadoMembresiaId");

                    b.HasOne("GIMNASIO.Models.MetodoPagoMembresia", "MetodoPagoMembresia")
                        .WithMany()
                        .HasForeignKey("MetodoPagoMembresiaId");

                    b.HasOne("GIMNASIO.Models.TipoMembresia", "TipoMembresia")
                        .WithMany()
                        .HasForeignKey("TipoMembresiaId");
                });

            modelBuilder.Entity("GIMNASIO.Models.Pedido", b =>
                {
                    b.HasOne("GIMNASIO.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GIMNASIO.Models.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("MetodoPagoId");

                    b.HasOne("GIMNASIO.Models.PedidoEstado", "PedidoEstado")
                        .WithMany()
                        .HasForeignKey("PedidoEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GIMNASIO.Models.PedidoDetalle", b =>
                {
                    b.HasOne("GIMNASIO.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GIMNASIO.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GIMNASIO.Models.Producto", b =>
                {
                    b.HasOne("GIMNASIO.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GIMNASIO.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GIMNASIO.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GIMNASIO.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GIMNASIO.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GIMNASIO.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
